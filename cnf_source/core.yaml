AWSTemplateFormatVersion: 2010-09-09
Description: Core template. Contains network and iam roles
Parameters:
  VpcCidr:
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: "10.0.0.0/16"
  Environment:
    Type: String
    AllowedValues: [ prod, test ]
    Default: prod
Conditions:
  ProdEnv: !Equals [ !Ref Environment, prod ]
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      # Indicates whether the instances launched in the VPC get DNS hostnames.
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, vpc ]
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 0
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, public-subnet01 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: false
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 1
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, public-subnet02 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: false
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 2
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, public-subnet03 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: false
  WebTierSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 3
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, webtier-subnet01 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  WebTierSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 4
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, webtier-subnet02 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  WebTierSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 5
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, webtier-subnet03 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  MiddlewareSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 6
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, middleware-subnet01 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  MiddlewareSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 7
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, middleware-subnet02 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  MiddlewareSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 8
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
        - Value: !Join
            - "-"
            - [ !Ref Environment, middleware-subnet03 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 9
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, database-subnet01 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 10
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, database-subnet02 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  DatabaseSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 11
        - !Cidr [ !Ref VpcCidr, 12, 8 ]
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, database-subnet03 ]
        - Key: Env
          Value: !Ref Environment
        - Key: Private
          Value: true
  Igw:
    Type: AWS::EC2::InternetGateway
  IgwToVpcAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc
  NatEip:
    Type: AWS::EC2::EIP
  NatGw:
    # https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html
    # A NAT gateway is a Network Address Translation service.
    # You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC
    # but external services cannot initiate a connection with those instances.
    # https://docs.aws.amazon.com/ko_kr/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip.AllocationId
      SubnetId: !Ref PublicSubnet1
  PublicRouteTable:
    # https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html
    # A route table contains a set of rules, called routes, that determine where network traffic from your subnet or gateway is directed.
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
  PublicRoute:
    DependsOn: IgwToVpcAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGw
  PubSubRtAttachment1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PubSubRtAttachment2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PubSubRtAttachment3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3
  WebSubRtAttachment1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref WebTierSubnet1
  WebSubRtAttachment2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref WebTierSubnet2
  WebSubRtAttachment3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref WebTierSubnet3
  MiddlewareSubRtAttachment1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref MiddlewareSubnet1
  MiddlewareSubRtAttachment2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref MiddlewareSubnet2
  MiddlewareSubRtAttachment3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref MiddlewareSubnet3
  DbSubRtAttachment1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref DatabaseSubnet1
  DbSubRtAttachment2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref DatabaseSubnet2
  DbSubRtAttachment3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref DatabaseSubnet3
  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB Subnet Group
      SubnetIds:
        - !Ref DatabaseSubnet1
        - !Ref DatabaseSubnet2
        - !Ref DatabaseSubnet3
  AdminRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              AWS: !Join
                - ":"
                - [ arn:aws:iam, !Ref AWS::AccountId, user/Admin ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, admin-role ]
        - Key: Env
          Value: !Ref Environment
  DevRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              AWS: !Ref AWS::AccountId
      ManagedPolicyArns:
        - !If [ ProdEnv, arn:aws:iam::aws:policy/ReadOnlyAccess, arn:aws:iam::aws:policy/AdministratorAccess ]
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - [ !Ref Environment, dev-role ]
        - Key: Env
          Value: !Ref Environment
  WebTierAsgDesSizeParameter:
    # https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: "1"
  WebTierAsgMinSizeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: "1"
  WebTierAsgMaxSizeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: 1
  MiddlewareAsgDesSizeParameter:
    # https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: "1"
  MiddlewareAsgMinSizeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: "1"
  MiddlewareAsgMaxSizeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: 1
